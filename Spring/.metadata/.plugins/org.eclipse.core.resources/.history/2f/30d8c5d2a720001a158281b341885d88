<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">


	<authentication-manager>
<!-- 		<authentication-provider>
			<user-service>
				<user name="yhjeon" authorities="ROLE_USER"
					password="{noop}letmein" />
					spring5 부터는 password의 encode의id(식별자)를 
					넣어줘야함 , 메모리상에 저장하는 방법
			</user-service>
		</authentication-provider> -->

		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from users where username=? "
				authorities-by-username-query="select username,authority from authorities where username=?" />
			<!--spring입장에선 어떤테이블을 사용하는지 알수없기때문에 SQL statement를 지정해줘야함 -->
		</authentication-provider>
	</authentication-manager>

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		<!--위에서부터 하나씩 체크해나가는 과정 , if ~ else if ~ else if 형태 -->
		<intercept-url pattern="/takedcourse" access="permitAll" />
		<intercept-url pattern="/applycourse" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/doapply" access="hasRole('ROLE_USER')" />
		<!--인증 받은 사람만 접근하도록 허용 -->
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/**" access="denyALl" />
			
		<form-login login-page="/login" authentication-failure-url="/login?error" />

		<logout />
	</http>

</b:beans>
