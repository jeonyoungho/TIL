<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!--dataSource에 대한 beans를 생성하는 부분 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- jdbc.properties파일에 해당 속성을 저장 -->
	

	<!-- 설정 파일에 대한 위치를 지정하기 위해 namespace에 placeholder사용 -->
	<!-- <bean id="offerDao" class="kr.ac.hansung.csemall.OfferDao"> <property 
		name="dataSource" ref="dataSource"></property> </bean> -->


	<context:annotation-config></context:annotation-config>
	<!-- 이부분이 되있어야지 annoation를 추가해야지 annotation기능이 활성화됨 그래야지 @component 가 먹게됨 -->
	<context:component-scan
		base-package="kr.ac.hansung.dao"></context:component-scan>
	<!--이 패키지를 읽어서 Repository annotation이 달려있으면 bean으로 등록  -->

	<context:property-placeholder
		location="/WEB-INF/props/jdbc.properties" />
</beans>
